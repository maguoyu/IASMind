---
title: IASMind项目指南
---

# IASMind项目指南

## 项目概述

IASMind是一个基于Python和TypeScript的全栈AI应用项目，使用Next.js作为前端框架，FastAPI作为后端服务，提供了多种AI功能，包括聊天机器人、文本处理、知识库管理等功能。

## 技术栈

### 后端技术栈
- **Python**: 主要后端语言
- **FastAPI**: 用于构建RESTful API
- **LangGraph/LangChain**: 用于AI工作流和代理构建
- **SQLAlchemy**: 数据库ORM
- **Pydantic**: 数据验证
- **Uvicorn**: ASGI服务器

### 前端技术栈
- **TypeScript**: 前端类型安全语言
- **Next.js**: React框架，用于服务端渲染和静态站点生成
- **Tailwind CSS**: 实用优先的CSS框架
- **Radix UI**: 无样式、可访问的UI组件
- **Framer Motion**: 用于动画
- **vchars**: 用于数据可视化

## 代码风格指南

### Python代码风格
- 使用PEP 8风格指南
- 使用类型提示增强代码可读性
- 对类和函数使用文档字符串
- 使用异步编程风格（async/await）处理IO密集型操作

### TypeScript/React代码风格
- 使用函数组件和React钩子
- 使用TypeScript类型系统确保类型安全
- 使用Tailwind CSS进行样式设计
- 组件应小而专注，遵循单一责任原则

## 项目结构指南

### 后端结构
- **src/**: 主要源代码目录
  - **agents/**: AI代理相关代码
  - **chatbot/**: 聊天机器人功能
  - **config/**: 配置管理
  - **database/**: 数据库模型和连接
  - **llms/**: 大型语言模型集成
  - **rag/**: 检索增强生成模块
  - **server/**: FastAPI服务器和路由
  - **utils/**: 工具函数和辅助方法

### 前端结构
- **web/src/**: Next.js源代码目录
  - **app/**: 页面和路由
  - **components/**: UI组件
  - **core/**: 核心功能和API客户端
  - **hooks/**: 自定义React钩子
  - **styles/**: 全局样式

## 开发规范

### 通用规范
- **尽量使用现有技术栈**，除非用户指定新增类库
- **跟随项目现有的命名约定和目录结构**
- **保持代码清晰并添加适当注释**
- **使用TypeScript类型和Python类型提示**

### API开发
- 遵循RESTful API设计原则
- 使用Pydantic模型定义请求和响应数据结构
- 实现适当的错误处理和状态码
- 提供清晰的API文档

### 前端开发
- 使用组件化开发方法
- 确保UI元素的可访问性
- 优化性能和加载时间
- 实现响应式设计，适配不同屏幕尺寸

### 数据库操作
- 使用SQLAlchemy ORM进行数据库交互
- 遵循数据库迁移最佳实践
- 确保适当的索引和查询优化
- 实现数据验证和完整性检查

## 开发环境
- 使用window11的开发环境

## 注意事项

- 在实现新功能时，检查是否已有类似功能可以复用
- 与项目现有风格保持一致
- 提供中文注释和文档
- 确保安全性和性能方面的考虑
-思考过程采用中文输出

- 提供中文注释和文档
- 确保安全性和性能方面的考虑
